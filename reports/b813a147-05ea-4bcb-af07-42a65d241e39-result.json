{"name": "test_invest[case6]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'OK' == '余额必须大于0并且小于或者等于500000'\n  - 余额必须大于0并且小于或者等于500000\n  + OK", "trace": "get_token = ('Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzMzcyNjUsImV4cCI6MTYxOTQwOTQyNn0.K5Q7uNHfNxKefB2anGUQi4NlERc220Xr4nMqUKVhoJjYm48GN4rKCem2sNQAzZVJVgalebRENBAtuBYZIEyrwA', 1000337265)\ncase = {'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'auto_script': 'OK', 'case_id': 7, 'check_sql': None, ...}\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_invest(get_token,case):\n        data = Case_Data().re_repelace(case[\"data\"],1)\n        data = eval(data)\n        headers = eval(case[\"Headers\"])\n        headers[\"Authorization\"] = get_token[0]\n        excepted = case[\"excepted\"]\n    \n        if case[\"title\"] == \"正常的充值\":\n            with MD() as sql:\n                user_blacene = sql.query(\"select leave_amount from futureloan.member  where mobile_phone = 18873839536\")[\"leave_amount\"]\n            increase = eval(data[\"amount\"])\n        data = json.dumps(data)\n    \n        # 发请求\n        respose = Midd_Ware.req_obj.send_request(method=case[\"method\"], url=url, data=data, headers=headers)\n        data_excel.write_data(row=case[\"case_id\"] + 1, column=10, value=str(respose[\"msg\"]))\n        if respose[\"msg\"] == \"OK\" and case[\"title\"] == \"正常的充值\":\n            with MD() as sql:\n                blacene = sql.query(\"select leave_amount from futureloan.member  where mobile_phone = 18873839536\")[\"leave_amount\"]\n            ret = blacene - user_blacene\n            try:\n                assert ret == increase\n                print(\"充值了{} 数据库增加了{} 比对正确\".format(increase,ret))\n            except AssertionError as e :\n                print(\"请求前 账户余额{}。请求后账户余额{} 充值了{} 实际增加了{}\".format(user_blacene,blacene,increase,ret))\n    \n    \n        # 断言\n        try:\n            assert respose['msg'] == excepted\n            Midd_Ware.logger.info(\"第{}条测试用例通过,请求参数是{}\".format(case[\"case_id\"], data))\n            data_excel.write_data(row=case[\"case_id\"] + 1, column=9, value=\"pass\")\n        except AssertionError as e:\n            Midd_Ware.logger.info(\n                \"第{}条测试用例不通过 ！\\n 请求体是{} 请求内容是{}。预期结果是{}---返回结果是{}\".format(case[\"case_id\"], data, case[\"title\"], excepted,                                                                      respose[\"msg\"]))\n            data_excel.write_data(row=case[\"case_id\"] + 1, column=9, value=\"failure\")\n>           raise e\n\ntest_invest.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_token = ('Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzMzcyNjUsImV4cCI6MTYxOTQwOTQyNn0.K5Q7uNHfNxKefB2anGUQi4NlERc220Xr4nMqUKVhoJjYm48GN4rKCem2sNQAzZVJVgalebRENBAtuBYZIEyrwA', 1000337265)\ncase = {'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'auto_script': 'OK', 'case_id': 7, 'check_sql': None, ...}\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_invest(get_token,case):\n        data = Case_Data().re_repelace(case[\"data\"],1)\n        data = eval(data)\n        headers = eval(case[\"Headers\"])\n        headers[\"Authorization\"] = get_token[0]\n        excepted = case[\"excepted\"]\n    \n        if case[\"title\"] == \"正常的充值\":\n            with MD() as sql:\n                user_blacene = sql.query(\"select leave_amount from futureloan.member  where mobile_phone = 18873839536\")[\"leave_amount\"]\n            increase = eval(data[\"amount\"])\n        data = json.dumps(data)\n    \n        # 发请求\n        respose = Midd_Ware.req_obj.send_request(method=case[\"method\"], url=url, data=data, headers=headers)\n        data_excel.write_data(row=case[\"case_id\"] + 1, column=10, value=str(respose[\"msg\"]))\n        if respose[\"msg\"] == \"OK\" and case[\"title\"] == \"正常的充值\":\n            with MD() as sql:\n                blacene = sql.query(\"select leave_amount from futureloan.member  where mobile_phone = 18873839536\")[\"leave_amount\"]\n            ret = blacene - user_blacene\n            try:\n                assert ret == increase\n                print(\"充值了{} 数据库增加了{} 比对正确\".format(increase,ret))\n            except AssertionError as e :\n                print(\"请求前 账户余额{}。请求后账户余额{} 充值了{} 实际增加了{}\".format(user_blacene,blacene,increase,ret))\n    \n    \n        # 断言\n        try:\n>           assert respose['msg'] == excepted\nE           AssertionError: assert 'OK' == '余额必须大于0并且小于或者等于500000'\nE             - 余额必须大于0并且小于或者等于500000\nE             + OK\n\ntest_invest.py:44: AssertionError"}, "attachments": [{"name": "log", "source": "0049814c-4688-4a9d-a71a-4b804851ba1b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5077c3c7-b4f8-49aa-82c4-caa6f77ea9d0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 7, 'interface': '充值', 'url': '/member/recharge', 'method': 'post', 'title': '充值金额为0', 'data': '{\"member_id\":\"#id#\",\"amount\":\"0\"}', 'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'excepted': '余额必须大于0并且小于或者等于500000', 'result': 'failure', 'auto_script': 'OK', 'check_sql': None}"}], "start": 1619409126760, "stop": 1619409126982, "uuid": "83e3aacb-3e1d-4898-8b27-6cf2aab6c800", "historyId": "2307f7eeb4d89b719e566454183abbc4", "testCaseId": "41bcde44a67e7565711cb67471666239", "fullName": "test_invest#test_invest", "labels": [{"name": "suite", "value": "test_invest"}, {"name": "host", "value": "DESKTOP-AC1MULO"}, {"name": "thread", "value": "30072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_invest"}]}