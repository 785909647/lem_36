{"name": "test_api_audit[case7]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1 == 0", "trace": "self = <tests.test_audit.Test_Audit object at 0x0000024B3A5D74E0>\ncase = {'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'auto_sc..._not只能为true或者false', 'case_id': 8, 'data': '{\\n    \"loan_id\":\"#project_id4#\",\\n    \"approved_or_not\":\"审核通过\"\\n\\n}', ...}\nget_root_token = ({'N_id': 2064725, 'get_id': 2037397, 'give_id': 2052534, 'no_id': 2037790, ...}, {'shenhe': 'Bearer eyJhbGciOiJIUzUxM...xMX0.p_2rJqGcVD0hSZ8UNytVbOTyV-_eAYU3X3qdA6zMcwX7xeJvuXX-VUAN7E7bLLXhanK7yELcNEzo9EDiRRxPzA', 'shenhe_id': 1000337288})\nget_token = ('Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzMzcyNjUsImV4cCI6MTYxOTQwOTQxMX0.plgPSAOvuSgFfZzHE42WBRtkfTPYORNg8fvXUlIiHgW_kXJMCd2Z5c6RcXJnYI6eRje_zJR9IZNVKEJg3IM64w', 1000337265)\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_api_audit(self,case,get_root_token,get_token):\n        data = self.mid_case.re_repelace(case[\"data\"], 1)\n        excepted = case[\"excepted\"]\n        head = eval(case[\"Headers\"])\n        if head[\"Authorization\"]:\n            head[\"Authorization\"] =  get_token[0]\n        else:\n            head[\"Authorization\"] = get_root_token[1][\"shenhe\"]\n        if case[\"case_id\"] == 3:\n            respose =  self.mid_obj.req_obj.send_request(method=case[\"method\"], url=self.url, data=data, headers=head)\n        else:\n            data = eval(data)\n            respose = self.mid_obj.req_obj.send_request(method=case[\"method\"], url=self.url, json=data, headers=head)\n    \n        #断言\n        try:\n            for k,v in eval(case[\"excepted\"]).items():\n                assert jsonpath.jsonpath(respose, k)[0] == v\n            self.mid_obj.logger.info(\"第{}条测试用例通过,请求参数是{}\".format(case[\"case_id\"], data))\n            self.excel.write_data(row=case[\"case_id\"] + 1, column=9, value=\"pass\")\n        except AssertionError as e:\n            Midd_Ware.logger.info(\"第{}条测试用例不通过 ！\\n 请求体是{} 请求内容是{}。预期结果是{}---返回结果是{}\".format(case[\"case_id\"], data, case[\"title\"],excepted,respose[\"msg\"]))\n            self.excel.write_data(row=case[\"case_id\"] + 1, column=9, value=\"failure\")\n>           raise e\n\ntest_audit.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.test_audit.Test_Audit object at 0x0000024B3A5D74E0>\ncase = {'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'auto_sc..._not只能为true或者false', 'case_id': 8, 'data': '{\\n    \"loan_id\":\"#project_id4#\",\\n    \"approved_or_not\":\"审核通过\"\\n\\n}', ...}\nget_root_token = ({'N_id': 2064725, 'get_id': 2037397, 'give_id': 2052534, 'no_id': 2037790, ...}, {'shenhe': 'Bearer eyJhbGciOiJIUzUxM...xMX0.p_2rJqGcVD0hSZ8UNytVbOTyV-_eAYU3X3qdA6zMcwX7xeJvuXX-VUAN7E7bLLXhanK7yELcNEzo9EDiRRxPzA', 'shenhe_id': 1000337288})\nget_token = ('Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzMzcyNjUsImV4cCI6MTYxOTQwOTQxMX0.plgPSAOvuSgFfZzHE42WBRtkfTPYORNg8fvXUlIiHgW_kXJMCd2Z5c6RcXJnYI6eRje_zJR9IZNVKEJg3IM64w', 1000337265)\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_api_audit(self,case,get_root_token,get_token):\n        data = self.mid_case.re_repelace(case[\"data\"], 1)\n        excepted = case[\"excepted\"]\n        head = eval(case[\"Headers\"])\n        if head[\"Authorization\"]:\n            head[\"Authorization\"] =  get_token[0]\n        else:\n            head[\"Authorization\"] = get_root_token[1][\"shenhe\"]\n        if case[\"case_id\"] == 3:\n            respose =  self.mid_obj.req_obj.send_request(method=case[\"method\"], url=self.url, data=data, headers=head)\n        else:\n            data = eval(data)\n            respose = self.mid_obj.req_obj.send_request(method=case[\"method\"], url=self.url, json=data, headers=head)\n    \n        #断言\n        try:\n            for k,v in eval(case[\"excepted\"]).items():\n>               assert jsonpath.jsonpath(respose, k)[0] == v\nE               assert 1 == 0\n\ntest_audit.py:39: AssertionError"}, "attachments": [{"name": "log", "source": "5fdf932d-1061-4561-b7ee-cf3b8700e91b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6078d7b7-cb5c-45a5-ba3f-f85268765da9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 8, 'interface': '审核项目', 'url': '/loan/audit', 'method': 'PATCH', 'title': '审核类型传错误', 'data': '{\\n    \"loan_id\":\"#project_id4#\",\\n    \"approved_or_not\":\"审核通过\"\\n\\n}', 'Headers': '{\"Content-Type\":\"application/json\",\"X-Lemonban-Media-Type\":\"lemonban.v2\",\"Authorization\":None}', 'excepted': '{\"$..code\":0, \"$..msg\": \"项目不在审核中状态\"}', 'result': 'failure', 'auto_script': 'approved_or_not只能为true或者false'}"}], "start": 1619409114188, "stop": 1619409114411, "uuid": "150f6e12-f6c3-41a1-86f7-4c5cdca466e7", "historyId": "75a61a7b1118c7d552b3cc3d463457db", "testCaseId": "b4fbaf9314ba85c67acc5815b54923c3", "fullName": "test_audit.Test_Audit#test_api_audit", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_audit')"}, {"name": "suite", "value": "test_audit"}, {"name": "subSuite", "value": "Test_Audit"}, {"name": "host", "value": "DESKTOP-AC1MULO"}, {"name": "thread", "value": "30072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_audit"}]}